/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessChannel,
  IM_ProcessChannelInterface,
} from "../IM_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct IM_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016000556000600155600060075534801561001f57600080fd5b5060405162000be038038062000be0833981016040819052610040916100f6565b61004d6002836005610057565b506080525061017f565b826005810192821561009f579160200282015b8281111561009f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061006a565b506100ab9291506100af565b5090565b5b808211156100ab57600081556001016100b0565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100f157600080fd5b919050565b60008060c0838503121561010957600080fd5b83601f84011261011857600080fd5b60405160a081016001600160401b038111828210171561013a5761013a6100c4565b6040528060a085018681111561014f57600080fd5b855b8181101561017057610162816100da565b835260209283019201610151565b50519196919550909350505050565b608051610a38620001a86000396000818160dc0152818161016001526101d60152610a386000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631db630ea146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063467ad0e9146100fe578063e90dd9e214610111575b600080fd5b6100856100803660046108cb565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060075481565b6100bf6100ba36600461090d565b6101a3565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c36600461090d565b6101c3565b61009060005481565b600754813515801561012a575080155b801561013857506000546001145b1561014257426007555b61014b826104bb565b801561018857508015806101885750426101857f00000000000000000000000000000000000000000000000000000000000000008361093c565b10155b1561019f5742600755813560015560808201356000555b5050565b600281600581106101b357600080fd5b01546001600160a01b0316905081565b60075480158015906101fd5750426101fb7f00000000000000000000000000000000000000000000000000000000000000008361093c565b105b6102435760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000546002600001546001600160a01b031633148015610261575082155b80156102705750806001166001145b156102815760011916600217610464565b6002600101546001600160a01b03163314801561029e5750826001145b80156102ad5750806002166002145b156102be5760021916600417610464565b6002600101546001600160a01b0316331480156102db5750826002145b80156102ea5750806008166008145b156102f85760081916610464565b6002600101546001600160a01b0316331480156103155750826003145b80156103245750806004166004145b156103355760041916601017610464565b60028001546001600160a01b0316331480156103515750826004145b80156103605750806020166020145b156103715760201916600817610464565b60028001546001600160a01b03163314801561038d5750826005145b801561039c5750806010166010145b156103ad5760101916604017610464565b6002600301546001600160a01b0316331480156103ca5750826006145b80156103d95750806040166040145b156103ea5760401916608017610464565b6002600401546001600160a01b0316331480156104075750826007145b80156104165750806080166080145b15610428576080191661010017610464565b6002600301546001600160a01b0316331480156104455750826008145b801561045657508061010016610100145b156104645761010019166020175b5b80156104b4578060401660401415610484576040191661010017610465565b806010166010141561049c5760101916602017610465565b80600416600414156104b45760041916600817610465565b6000555050565b60008160000135600154106104d257506000919050565b6040805160009161051b91853591860135906020808801359160608901359160808a01359101948552602085019390935260408401919091526060830152608082015260a00190565b60405160208183030381529060405280519060200120905060005b60058110156105fe576002816005811061055257610552610954565b01546001600160a01b03166105d461056d60a087018761096a565b836005811061057e5761057e610954565b60200281019061058e919061098a565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105ce92508791506106089050565b9061065b565b6001600160a01b0316146105ec575060009392505050565b806105f6816109d1565b915050610536565b5060019392505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080600061066a858561067f565b91509150610677816106c5565b509392505050565b6000808251604114156106b65760208301516040840151606085015160001a6106aa87828585610811565b945094505050506106be565b506000905060025b9250929050565b60008160048111156106d9576106d96109ec565b14156106e25750565b60018160048111156106f6576106f66109ec565b141561073f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161023a565b6002816004811115610753576107536109ec565b14156107a15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161023a565b60038160048111156107b5576107b56109ec565b141561080e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161023a565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561083e57506000905060036108c2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610892573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108bb576000600192509250506108c2565b9150600090505b94509492505050565b6000602082840312156108dd57600080fd5b813567ffffffffffffffff8111156108f457600080fd5b820160c0818503121561090657600080fd5b9392505050565b60006020828403121561091f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561094f5761094f610926565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261098057600080fd5b9190910192915050565b6000808335601e198436030181126109a157600080fd5b83018035915067ffffffffffffffff8211156109bc57600080fd5b6020019150368190038213156106be57600080fd5b60006000198214156109e5576109e5610926565b5060010190565b634e487b7160e01b600052602160045260246000fdfea26469706673582212208754445f45f2beba574ebf742af48f2b8942efe72c823d91fa026d3360efc6a264736f6c63430008090033";

type IM_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessChannel__factory extends ContractFactory {
  constructor(...args: IM_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<IM_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): IM_ProcessChannel {
    return super.attach(address) as IM_ProcessChannel;
  }
  override connect(signer: Signer): IM_ProcessChannel__factory {
    return super.connect(signer) as IM_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessChannelInterface {
    return new utils.Interface(_abi) as IM_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessChannel;
  }
}
