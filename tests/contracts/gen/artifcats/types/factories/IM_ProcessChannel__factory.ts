/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessChannel,
  IM_ProcessChannelInterface,
} from "../IM_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct IM_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016000556000600155600060075534801561001f57600080fd5b50604051610b9d380380610b9d83398101604081905261003e916100f4565b61004b6002836005610055565b506080525061017d565b826005810192821561009d579160200282015b8281111561009d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610068565b506100a99291506100ad565b5090565b5b808211156100a957600081556001016100ae565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100ef57600080fd5b919050565b60008060c0838503121561010757600080fd5b83601f84011261011657600080fd5b60405160a081016001600160401b0381118282101715610138576101386100c2565b6040528060a085018681111561014d57600080fd5b855b8181101561016e57610160816100d8565b83526020928301920161014f565b50519196919550909350505050565b6080516109f86101a56000396000818160dc0152818161016001526101d601526109f86000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631db630ea146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063467ad0e9146100fe578063e90dd9e214610111575b600080fd5b61008561008036600461088b565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060075481565b6100bf6100ba3660046108cd565b6101a3565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c3660046108cd565b6101c3565b61009060005481565b600754813515801561012a575080155b801561013857506000546001145b1561014257426007555b61014b8261047b565b801561018857508015806101885750426101857f0000000000000000000000000000000000000000000000000000000000000000836108fc565b10155b1561019f5742600755813560015560808201356000555b5050565b600281600581106101b357600080fd5b01546001600160a01b0316905081565b60075480158015906101fd5750426101fb7f0000000000000000000000000000000000000000000000000000000000000000836108fc565b105b6102435760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000546002600001546001600160a01b031633148015610261575082155b80156102705750806001166001145b156102815760011916600217610463565b6002600101546001600160a01b03163314801561029e5750826001145b80156102ad5750806002166002145b156102be5760021916600417610463565b6002600101546001600160a01b0316331480156102db5750826002145b80156102ea5750806004166004145b156102fb5760041916600817610463565b6002600101546001600160a01b0316331480156103185750826003145b80156103275750806004166004145b156103385760041916601017610463565b60028001546001600160a01b0316331480156103545750826004145b80156103635750806010166010145b156103745760101916600417610463565b60028001546001600160a01b0316331480156103905750826005145b801561039f5750806010166010145b156103b05760101916602017610463565b6002600301546001600160a01b0316331480156103cd5750826006145b80156103dc5750806020166020145b156103ed5760201916604017610463565b6002600401546001600160a01b03163314801561040a5750826007145b80156104195750806040166040145b1561042a5760401916602017610463565b6002600301546001600160a01b0316331480156104475750826008145b80156104565750806020166020145b1561046357602019166010175b806008166008141561047457600819165b6000555050565b600081600001356001541061049257506000919050565b604080516000916104db91853591860135906020808801359160608901359160808a01359101948552602085019390935260408401919091526060830152608082015260a00190565b60405160208183030381529060405280519060200120905060005b60058110156105be576002816005811061051257610512610914565b01546001600160a01b031661059461052d60a087018761092a565b836005811061053e5761053e610914565b60200281019061054e919061094a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061058e92508791506105c89050565b9061061b565b6001600160a01b0316146105ac575060009392505050565b806105b681610991565b9150506104f6565b5060019392505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080600061062a858561063f565b9150915061063781610685565b509392505050565b6000808251604114156106765760208301516040840151606085015160001a61066a878285856107d1565b9450945050505061067e565b506000905060025b9250929050565b6000816004811115610699576106996109ac565b14156106a25750565b60018160048111156106b6576106b66109ac565b14156106ff5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161023a565b6002816004811115610713576107136109ac565b14156107615760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161023a565b6003816004811115610775576107756109ac565b14156107ce5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161023a565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156107fe5750600090506003610882565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610852573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661087b57600060019250925050610882565b9150600090505b94509492505050565b60006020828403121561089d57600080fd5b813567ffffffffffffffff8111156108b457600080fd5b820160c081850312156108c657600080fd5b9392505050565b6000602082840312156108df57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561090f5761090f6108e6565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261094057600080fd5b9190910192915050565b6000808335601e1984360301811261096157600080fd5b83018035915067ffffffffffffffff82111561097c57600080fd5b60200191503681900382131561067e57600080fd5b60006000198214156109a5576109a56108e6565b5060010190565b634e487b7160e01b600052602160045260246000fdfea264697066735822122030ba68338e0fb1d822db78c6e32c24513317719b27870a6b3296b41a8291207764736f6c63430008090033";

type IM_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessChannel__factory extends ContractFactory {
  constructor(...args: IM_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<IM_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): IM_ProcessChannel {
    return super.attach(address) as IM_ProcessChannel;
  }
  override connect(signer: Signer): IM_ProcessChannel__factory {
    return super.connect(signer) as IM_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessChannelInterface {
    return new utils.Interface(_abi) as IM_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessChannel;
  }
}
