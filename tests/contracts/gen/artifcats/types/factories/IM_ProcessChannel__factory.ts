/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessChannel,
  IM_ProcessChannelInterface,
} from "../IM_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cond",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct IM_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600055600060015560006007553480156200002057600080fd5b5060405162000c6f38038062000c6f833981016040819052620000439162000104565b6200005260028360056200005d565b506080525062000197565b8260058101928215620000a8579160200282015b82811115620000a857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000071565b50620000b6929150620000ba565b5090565b5b80821115620000b65760008155600101620000bb565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000ff57600080fd5b919050565b60008060c083850312156200011857600080fd5b83601f8401126200012857600080fd5b60405160a081016001600160401b03811182821017156200014d576200014d620000d1565b6040528060a08501868111156200016357600080fd5b855b8181101562000188576200017981620000e7565b83526020928301920162000165565b50519196919550909350505050565b608051610aaf620001c06000396000818160dc0152818161018201526101f20152610aaf6000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631311163c146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063b08bb56a146100fe578063e90dd9e214610111575b600080fd5b610085610080366004610920565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060075481565b6100bf6100ba366004610962565b6101bf565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c36600461097b565b6101df565b61009060005481565b600754813515801561012a575080155b801561013857506000546001145b1561014557426007555050565b600061015083610505565b905080156101ba578161017c5760808301351561016c57426007555b5050803560015560800135600055565b426101a77f0000000000000000000000000000000000000000000000000000000000000000846109b3565b106101ba57823560015560808301356000555b505050565b600281600581106101cf57600080fd5b01546001600160a01b0316905081565b60075480158015906102195750426102177f0000000000000000000000000000000000000000000000000000000000000000836109b3565b105b61025f5760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000546002600001546001600160a01b03163314801561027d575083155b801561028c5750806001166001145b1561029d5760011916600217610480565b6002600101546001600160a01b0316331480156102ba5750836001145b80156102c95750806002166002145b156102da5760021916600417610480565b6002600101546001600160a01b0316331480156102f75750836002145b80156103065750806008166008145b156103145760081916610480565b6002600101546001600160a01b0316331480156103315750836003145b80156103405750806004166004145b156103515760041916601017610480565b60028001546001600160a01b03163314801561036d5750836004145b801561037c5750806020166020145b1561038d5760201916600817610480565b60028001546001600160a01b0316331480156103a95750836005145b80156103b85750806010166010145b156103c95760101916604017610480565b6002600301546001600160a01b0316331480156103e65750836006145b80156103f55750806040166040145b156104065760401916608017610480565b6002600401546001600160a01b0316331480156104235750836007145b80156104325750806080166080145b15610444576080191661010017610480565b6002600301546001600160a01b0316331480156104615750836008145b801561047257508061010016610100145b156104805761010019166020175b5b80156104fd5782600116600114801561049d5750806010166010145b156104ae5760101916602017610481565b8260021660021480156104c45750806040166040145b156104d6576040191661010017610481565b8260041660041480156104ec5750806004166004145b156104fd5760041916600817610481565b600055505050565b600081600001356001541061051c57506000919050565b6040805160009161057091853591860135906020808801359160608901359160808a01359160a08b01359101958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405160208183030381529060405280519060200120905060005b600581101561065357600281600581106105a7576105a76109cb565b01546001600160a01b03166106296105c260c08701876109e1565b83600581106105d3576105d36109cb565b6020028101906105e39190610a01565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610623925087915061065d9050565b906106b0565b6001600160a01b031614610641575060009392505050565b8061064b81610a48565b91505061058b565b5060019392505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60008060006106bf85856106d4565b915091506106cc8161071a565b509392505050565b60008082516041141561070b5760208301516040840151606085015160001a6106ff87828585610866565b94509450505050610713565b506000905060025b9250929050565b600081600481111561072e5761072e610a63565b14156107375750565b600181600481111561074b5761074b610a63565b14156107945760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610256565b60028160048111156107a8576107a8610a63565b14156107f65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610256565b600381600481111561080a5761080a610a63565b14156108635760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610256565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156108935750600090506003610917565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156108e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661091057600060019250925050610917565b9150600090505b94509492505050565b60006020828403121561093257600080fd5b813567ffffffffffffffff81111561094957600080fd5b820160e0818503121561095b57600080fd5b9392505050565b60006020828403121561097457600080fd5b5035919050565b6000806040838503121561098e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156109c6576109c661099d565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126109f757600080fd5b9190910192915050565b6000808335601e19843603018112610a1857600080fd5b83018035915067ffffffffffffffff821115610a3357600080fd5b60200191503681900382131561071357600080fd5b6000600019821415610a5c57610a5c61099d565b5060010190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220684382ac630f52a972cb9b437f3f56ea500a38531be7ed86c67307b4b776e88964736f6c63430008090033";

type IM_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessChannel__factory extends ContractFactory {
  constructor(...args: IM_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<IM_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): IM_ProcessChannel {
    return super.attach(address) as IM_ProcessChannel;
  }
  override connect(signer: Signer): IM_ProcessChannel__factory {
    return super.connect(signer) as IM_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessChannelInterface {
    return new utils.Interface(_abi) as IM_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessChannel;
  }
}
