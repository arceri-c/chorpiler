/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessChannel,
  IM_ProcessChannelInterface,
} from "../IM_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cond",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct IM_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600055600060015560006007553480156200002057600080fd5b5060405162000c6438038062000c64833981016040819052620000439162000104565b6200005260028360056200005d565b506080525062000197565b8260058101928215620000a8579160200282015b82811115620000a857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000071565b50620000b6929150620000ba565b5090565b5b80821115620000b65760008155600101620000bb565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000ff57600080fd5b919050565b60008060c083850312156200011857600080fd5b83601f8401126200012857600080fd5b60405160a081016001600160401b03811182821017156200014d576200014d620000d1565b6040528060a08501868111156200016357600080fd5b855b8181101562000188576200017981620000e7565b83526020928301920162000165565b50519196919550909350505050565b608051610aa4620001c06000396000818160dc0152818161017701526101e70152610aa46000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631311163c146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063b08bb56a146100fe578063e90dd9e214610111575b600080fd5b610085610080366004610915565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060075481565b6100bf6100ba366004610957565b6101b4565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c366004610970565b6101d4565b61009060005481565b600754813515801561012a575080155b801561013857506000546001145b1561014557426007555050565b6000610150836104fa565b905080156101af578161017157505042600755803560015560800135600055565b4261019c7f0000000000000000000000000000000000000000000000000000000000000000846109a8565b106101af57823560015560808301356000555b505050565b600281600581106101c457600080fd5b01546001600160a01b0316905081565b600754801580159061020e57504261020c7f0000000000000000000000000000000000000000000000000000000000000000836109a8565b105b6102545760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000546002600001546001600160a01b031633148015610272575083155b80156102815750806001166001145b156102925760011916600217610475565b6002600101546001600160a01b0316331480156102af5750836001145b80156102be5750806002166002145b156102cf5760021916600417610475565b6002600101546001600160a01b0316331480156102ec5750836002145b80156102fb5750806008166008145b156103095760081916610475565b6002600101546001600160a01b0316331480156103265750836003145b80156103355750806004166004145b156103465760041916601017610475565b60028001546001600160a01b0316331480156103625750836004145b80156103715750806020166020145b156103825760201916600817610475565b60028001546001600160a01b03163314801561039e5750836005145b80156103ad5750806010166010145b156103be5760101916604017610475565b6002600301546001600160a01b0316331480156103db5750836006145b80156103ea5750806040166040145b156103fb5760401916608017610475565b6002600401546001600160a01b0316331480156104185750836007145b80156104275750806080166080145b15610439576080191661010017610475565b6002600301546001600160a01b0316331480156104565750836008145b801561046757508061010016610100145b156104755761010019166020175b5b80156104f2578260011660011480156104925750806010166010145b156104a35760101916602017610476565b8260021660021480156104b95750806040166040145b156104cb576040191661010017610476565b8260041660041480156104e15750806004166004145b156104f25760041916600817610476565b600055505050565b600081600001356001541061051157506000919050565b6040805160009161056591853591860135906020808801359160608901359160808a01359160a08b01359101958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405160208183030381529060405280519060200120905060005b6005811015610648576002816005811061059c5761059c6109c0565b01546001600160a01b031661061e6105b760c08701876109d6565b83600581106105c8576105c86109c0565b6020028101906105d891906109f6565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061061892508791506106529050565b906106a5565b6001600160a01b031614610636575060009392505050565b8061064081610a3d565b915050610580565b5060019392505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60008060006106b485856106c9565b915091506106c18161070f565b509392505050565b6000808251604114156107005760208301516040840151606085015160001a6106f48782858561085b565b94509450505050610708565b506000905060025b9250929050565b600081600481111561072357610723610a58565b141561072c5750565b600181600481111561074057610740610a58565b14156107895760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161024b565b600281600481111561079d5761079d610a58565b14156107eb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161024b565b60038160048111156107ff576107ff610a58565b14156108585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161024b565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610888575060009050600361090c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156108dc573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109055760006001925092505061090c565b9150600090505b94509492505050565b60006020828403121561092757600080fd5b813567ffffffffffffffff81111561093e57600080fd5b820160e0818503121561095057600080fd5b9392505050565b60006020828403121561096957600080fd5b5035919050565b6000806040838503121561098357600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156109bb576109bb610992565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126109ec57600080fd5b9190910192915050565b6000808335601e19843603018112610a0d57600080fd5b83018035915067ffffffffffffffff821115610a2857600080fd5b60200191503681900382131561070857600080fd5b6000600019821415610a5157610a51610992565b5060010190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e90e2fdd1f3959161918c5ae026f118d3b4403da3914d8075abe16045c868f0c64736f6c63430008090033";

type IM_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessChannel__factory extends ContractFactory {
  constructor(...args: IM_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<IM_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): IM_ProcessChannel {
    return super.attach(address) as IM_ProcessChannel;
  }
  override connect(signer: Signer): IM_ProcessChannel__factory {
    return super.connect(signer) as IM_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessChannelInterface {
    return new utils.Interface(_abi) as IM_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessChannel;
  }
}
