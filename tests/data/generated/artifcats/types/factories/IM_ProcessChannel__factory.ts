/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessChannel,
  IM_ProcessChannelInterface,
} from "../IM_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct IM_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016000556000600155600060025534801561001f57600080fd5b50604051610b8f380380610b8f83398101604081905261003e916100f4565b61004b6003836005610055565b506080525061017d565b826005810192821561009d579160200282015b8281111561009d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610068565b506100a99291506100ad565b5090565b5b808211156100a957600081556001016100ae565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100ef57600080fd5b919050565b60008060c0838503121561010757600080fd5b83601f84011261011657600080fd5b60405160a081016001600160401b0381118282101715610138576101386100c2565b6040528060a085018681111561014d57600080fd5b855b8181101561016e57610160816100d8565b83526020928301920161014f565b50519196919550909350505050565b6080516109ea6101a56000396000818160dc0152818161016e01526101dd01526109ea6000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631311163c146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063467ad0e9146100fe578063e90dd9e214610111575b600080fd5b61008561008036600461087d565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060025481565b6100bf6100ba3660046108bf565b6101aa565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c3660046108bf565b6101ca565b61009060005481565b600254813515801561012a575080155b1561013757426002555050565b6101408261048d565b156101a657806101685760808201351561015957426002555b50803560015560800135600055565b426101937f0000000000000000000000000000000000000000000000000000000000000000836108ee565b106101a657813560015560808201356000555b5050565b600381600581106101ba57600080fd5b01546001600160a01b0316905081565b60025480158015906102045750426102027f0000000000000000000000000000000000000000000000000000000000000000836108ee565b105b61024a5760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000548215801561025e5750806002166002145b801561027757506003600001546001600160a01b031633145b156102885760021916600417610486565b82600114801561029b5750806004166004145b80156102b457506003600101546001600160a01b031633145b156102c55760041916600817610486565b8260021480156102d85750806010166010145b80156102f157506003600101546001600160a01b031633145b156103025760101916602017610486565b8260031480156103155750806040166040145b801561032e57506003600101546001600160a01b031633145b1561033f5760401916608017610486565b82600414801561035457508061010016610100145b801561036d57506003600201546001600160a01b031633145b1561037f576101001916601017610486565b82600514801561039457508061020016610200145b80156103ad57506003600201546001600160a01b031633145b156103c057610200191661040017610486565b8260061480156103d557508061080016610800145b80156103ed575060038001546001600160a01b031633145b1561040057610800191661100017610486565b82600714801561041557508061100016611000145b801561042e57506003600401546001600160a01b031633145b1561044157611000191661200017610486565b82600814801561045657508061200016612000145b801561046e575060038001546001600160a01b031633145b1561048157612000191661010017610486565b505050565b6000555050565b60008160000135600154106104a457506000919050565b604080518335602082810191909152840135818301529083013560608281019190915283013560808281019190915283013560a08281019190915283013560c082015260009060e00160405160208183030381529060405280519060200120905060005b60058110156105d0576003816005811061052457610524610906565b01546001600160a01b03166105a661053f60c087018761091c565b836005811061055057610550610906565b602002810190610560919061093c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105a092508791506105da9050565b9061060d565b6001600160a01b0316146105be575060009392505050565b806105c881610983565b915050610508565b5060019392505050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b600080600061061c8585610631565b9150915061062981610677565b509392505050565b6000808251604114156106685760208301516040840151606085015160001a61065c878285856107c3565b94509450505050610670565b506000905060025b9250929050565b600081600481111561068b5761068b61099e565b14156106945750565b60018160048111156106a8576106a861099e565b14156106f15760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610241565b60028160048111156107055761070561099e565b14156107535760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610241565b60038160048111156107675761076761099e565b14156107c05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610241565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156107f05750600090506003610874565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610844573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661086d57600060019250925050610874565b9150600090505b94509492505050565b60006020828403121561088f57600080fd5b813567ffffffffffffffff8111156108a657600080fd5b820160e081850312156108b857600080fd5b9392505050565b6000602082840312156108d157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610901576109016108d8565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261093257600080fd5b9190910192915050565b6000808335601e1984360301811261095357600080fd5b83018035915067ffffffffffffffff82111561096e57600080fd5b60200191503681900382131561067057600080fd5b6000600019821415610997576109976108d8565b5060010190565b634e487b7160e01b600052602160045260246000fdfea264697066735822122080bf04c2ff517113c0d63806931760a9f6af2d70068b421a69f29f81cba9dd6064736f6c63430008090033";

type IM_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessChannel__factory extends ContractFactory {
  constructor(...args: IM_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<IM_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): IM_ProcessChannel {
    return super.attach(address) as IM_ProcessChannel;
  }
  override connect(signer: Signer): IM_ProcessChannel__factory {
    return super.connect(signer) as IM_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessChannelInterface {
    return new utils.Interface(_abi) as IM_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessChannel;
  }
}
