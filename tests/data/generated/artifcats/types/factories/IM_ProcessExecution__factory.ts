/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessExecution,
  IM_ProcessExecutionInterface,
} from "../IM_ProcessExecution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "enact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b5060405161069d38038061069d833981016040819052610034916100d1565b6100416001826005610048565b5050610163565b8260058101928215610090579160200282015b8281111561009057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061005b565b5061009c9291506100a0565b5090565b5b8082111561009c57600081556001016100a1565b80516001600160a01b03811681146100cc57600080fd5b919050565b600060a082840312156100e357600080fd5b82601f8301126100f257600080fd5b60405160a081016001600160401b038111828210171561012257634e487b7160e01b600052604160045260246000fd5b6040528060a084018581111561013757600080fd5b845b818110156101585761014a816100b5565b835260209283019201610139565b509195945050505050565b61052b806101726000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806335c1d349146100465780635e9cc2a914610076578063e90dd9e21461008b575b600080fd5b6100596100543660046104dc565b6100a2565b6040516001600160a01b0390911681526020015b60405180910390f35b6100896100843660046104dc565b6100c2565b005b61009460005481565b60405190815260200161006d565b600181600581106100b257600080fd5b01546001600160a01b0316905081565b6000545b801561028257811580156100dd5750806001166001145b156100ee57600119166002176100c6565b8160031480156101015750806008166008145b1561011257600819166040176100c6565b8160021480156101255750806008166008145b1561013657600819166010176100c6565b8160051480156101495750806080166080145b1561015b5760801916610200176100c6565b81600414801561016e5750806080166080145b156101805760801916610100176100c6565b81600614801561019557508061040016610400145b156101a8576104001916610800176100c6565b8160081480156101bd57508061040016610400145b156101d0576104001916612000176100c6565b80600116600114156101e857600119166002176100c6565b806008166008141561020057600819166040176100c6565b806008166008141561021857600819166010176100c6565b80608016608014156102315760801916610200176100c6565b806080166080141561024a5760801916610100176100c6565b80610400166104001415610266576104001916610800176100c6565b80610400166104001415610282576104001916612000176100c6565b80156104bf57811580156102995750806002166002145b80156102b257506001600001546001600160a01b031633145b156102c357600219166004176104bf565b8160011480156102d65750806004166004145b80156102ee575060018001546001600160a01b031633145b156102ff57600419166008176104bf565b8160021480156103125750806010166010145b801561032a575060018001546001600160a01b031633145b1561033b57601019166020176104bf565b81600314801561034e5750806040166040145b8015610366575060018001546001600160a01b031633145b1561037757604019166080176104bf565b81600414801561038c57508061010016610100145b80156103a557506001600201546001600160a01b031633145b156103b75761010019166010176104bf565b8160051480156103cc57508061020016610200145b80156103e557506001600201546001600160a01b031633145b156103f8576102001916610400176104bf565b81600614801561040d57508061080016610800145b801561042657506001600301546001600160a01b031633145b15610439576108001916611000176104bf565b81600714801561044e57508061100016611000145b801561046757506001600401546001600160a01b031633145b1561047a576110001916612000176104bf565b81600814801561048f57508061200016612000145b80156104a857506001600301546001600160a01b031633145b156104bb576120001916610100176104bf565b5050565b80156104d65780602016602014156104d657602019165b60005550565b6000602082840312156104ee57600080fd5b503591905056fea2646970667358221220c8eb2d9426eccf0d8ecfe9905e7bb5672a0587bd4e4306afaf701a2270a4731664736f6c63430008090033";

type IM_ProcessExecutionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessExecutionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessExecution__factory extends ContractFactory {
  constructor(...args: IM_ProcessExecutionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessExecution> {
    return super.deploy(
      _participants,
      overrides || {}
    ) as Promise<IM_ProcessExecution>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_participants, overrides || {});
  }
  override attach(address: string): IM_ProcessExecution {
    return super.attach(address) as IM_ProcessExecution;
  }
  override connect(signer: Signer): IM_ProcessExecution__factory {
    return super.connect(signer) as IM_ProcessExecution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessExecutionInterface {
    return new utils.Interface(_abi) as IM_ProcessExecutionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessExecution {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessExecution;
  }
}
