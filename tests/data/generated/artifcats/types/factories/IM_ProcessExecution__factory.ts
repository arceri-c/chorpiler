/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessExecution,
  IM_ProcessExecutionInterface,
} from "../IM_ProcessExecution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cond",
        type: "uint256",
      },
    ],
    name: "enact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b50604051610552380380610552833981016040819052610034916100d1565b6100416001826005610048565b5050610163565b8260058101928215610090579160200282015b8281111561009057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061005b565b5061009c9291506100a0565b5090565b5b8082111561009c57600081556001016100a1565b80516001600160a01b03811681146100cc57600080fd5b919050565b600060a082840312156100e357600080fd5b82601f8301126100f257600080fd5b60405160a081016001600160401b038111828210171561012257634e487b7160e01b600052604160045260246000fd5b6040528060a084018581111561013757600080fd5b845b818110156101585761014a816100b5565b835260209283019201610139565b509195945050505050565b6103e0806101726000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302563a901461004657806335c1d3491461005b578063e90dd9e21461008b575b600080fd5b61005961005436600461036f565b6100a2565b005b61006e610069366004610391565b61034f565b6040516001600160a01b0390911681526020015b60405180910390f35b61009460005481565b604051908152602001610082565b6000546001600001546001600160a01b0316331480156100c0575082155b80156100cf5750806001166001145b156100e057600119166002176102cb565b60018001546001600160a01b0316331480156100fc5750826001145b801561010b5750806002166002145b1561011c57600219166004176102cb565b60018001546001600160a01b0316331480156101385750826002145b80156101475750806008166008145b1561015557600819166102cb565b60018001546001600160a01b0316331480156101715750826003145b80156101805750806004166004145b1561019157600419166010176102cb565b6001600201546001600160a01b0316331480156101ae5750826004145b80156101bd5750806020166020145b156101ce57602019166008176102cb565b6001600201546001600160a01b0316331480156101eb5750826005145b80156101fa5750806010166010145b1561020b57601019166040176102cb565b6001600301546001600160a01b0316331480156102285750826006145b80156102375750806040166040145b1561024857604019166080176102cb565b6001600401546001600160a01b0316331480156102655750826007145b80156102745750806080166080145b156102865760801916610100176102cb565b6001600301546001600160a01b0316331480156102a35750826008145b80156102b457508061010016610100145b156102c65761010019166020176102cb565b505050565b5b8015610348578160011660011480156102e85750806010166010145b156102f957601019166020176102cc565b81600216600214801561030f5750806040166040145b156103215760401916610100176102cc565b8160041660041480156103375750806004166004145b1561034857600419166008176102cc565b6000555050565b6001816005811061035f57600080fd5b01546001600160a01b0316905081565b6000806040838503121561038257600080fd5b50508035926020909101359150565b6000602082840312156103a357600080fd5b503591905056fea2646970667358221220ad756568f5e052b741792737ea0c0758de76686fa9863546f38e3bb06bebb56864736f6c63430008090033";

type IM_ProcessExecutionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessExecutionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessExecution__factory extends ContractFactory {
  constructor(...args: IM_ProcessExecutionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessExecution> {
    return super.deploy(
      _participants,
      overrides || {}
    ) as Promise<IM_ProcessExecution>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_participants, overrides || {});
  }
  override attach(address: string): IM_ProcessExecution {
    return super.attach(address) as IM_ProcessExecution;
  }
  override connect(signer: Signer): IM_ProcessExecution__factory {
    return super.connect(signer) as IM_ProcessExecution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessExecutionInterface {
    return new utils.Interface(_abi) as IM_ProcessExecutionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessExecution {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessExecution;
  }
}
