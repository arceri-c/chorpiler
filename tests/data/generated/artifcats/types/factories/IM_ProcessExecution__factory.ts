/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessExecution,
  IM_ProcessExecutionInterface,
} from "../IM_ProcessExecution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "enact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_resolved",
        type: "bool",
      },
    ],
    name: "setresolved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000556006805460ff1916905534801561001f57600080fd5b5060405161059b38038061059b83398101604081905261003e916100db565b61004b6001826005610052565b505061016d565b826005810192821561009a579160200282015b8281111561009a57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610065565b506100a69291506100aa565b5090565b5b808211156100a657600081556001016100ab565b80516001600160a01b03811681146100d657600080fd5b919050565b600060a082840312156100ed57600080fd5b82601f8301126100fc57600080fd5b60405160a081016001600160401b038111828210171561012c57634e487b7160e01b600052604160045260246000fd5b6040528060a084018581111561014157600080fd5b845b8181101561016257610154816100bf565b835260209283019201610143565b509195945050505050565b61041f8061017c6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806335c1d3491461005c5780633f6fa6551461008c5780635e9cc2a9146100a9578063b482e4f5146100be578063e90dd9e2146100df575b600080fd5b61006f61006a3660046103a7565b6100f6565b6040516001600160a01b0390911681526020015b60405180910390f35b6006546100999060ff1681565b6040519015158152602001610083565b6100bc6100b73660046103a7565b610116565b005b6100bc6100cc3660046103c0565b6006805460ff1916911515919091179055565b6100e860005481565b604051908152602001610083565b6001816005811061010657600080fd5b01546001600160a01b0316905081565b6000545b80156103a157806001166001141561015e5781600114801561014957506001600001546001600160a01b031633145b1561015e57600091506001191660021761011a565b806002166002141561019b57816002148015610186575060018001546001600160a01b031633145b1561019b57600091506002191660041761011a565b80600816600814156101d5578160031480156101c3575060018001546001600160a01b031633145b156101d55760009150600819166103a1565b806004166004141561022e578160041480156101fd575060018001546001600160a01b031633145b1561021257600091506004191660101761011a565b60065460ff1615156001141561022e576004191660081761011a565b806020166020141561026c5781600514801561025757506001600201546001600160a01b031633145b1561026c57600091506020191660081761011a565b80601016601014156102c65781600614801561029557506001600201546001600160a01b031633145b156102aa57600091506010191660401761011a565b60065460ff161515600114156102c6576010191660201761011a565b8060401660401415610321578160071480156102ef57506001600301546001600160a01b031633145b1561030457600091506040191660801761011a565b60065460ff1615156001141561032157604019166101001761011a565b80608016608014156103605781600814801561034a57506001600401546001600160a01b031633145b156103605760009150608019166101001761011a565b806101001661010014156103a15781600914801561038b57506001600301546001600160a01b031633145b156103a15760009150610100191660201761011a565b60005550565b6000602082840312156103b957600080fd5b5035919050565b6000602082840312156103d257600080fd5b813580151581146103e257600080fd5b939250505056fea26469706673582212202d3862b1eba3b6de72ae29ba1ff76fd2a542b2804971c2e58dd94c9e9048a45564736f6c63430008090033";

type IM_ProcessExecutionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessExecutionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessExecution__factory extends ContractFactory {
  constructor(...args: IM_ProcessExecutionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessExecution> {
    return super.deploy(
      _participants,
      overrides || {}
    ) as Promise<IM_ProcessExecution>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_participants, overrides || {});
  }
  override attach(address: string): IM_ProcessExecution {
    return super.attach(address) as IM_ProcessExecution;
  }
  override connect(signer: Signer): IM_ProcessExecution__factory {
    return super.connect(signer) as IM_ProcessExecution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessExecutionInterface {
    return new utils.Interface(_abi) as IM_ProcessExecutionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessExecution {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessExecution;
  }
}
