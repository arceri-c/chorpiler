/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PH_ProcessChannel,
  PH_ProcessChannelInterface,
} from "../PH_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct PH_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016000556000600155600060025534801561001f57600080fd5b50604051610b00380380610b0083398101604081905261003e916100f4565b61004b6003836005610055565b506080525061017d565b826005810192821561009d579160200282015b8281111561009d57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610068565b506100a99291506100ad565b5090565b5b808211156100a957600081556001016100ae565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100ef57600080fd5b919050565b60008060c0838503121561010757600080fd5b83601f84011261011657600080fd5b60405160a081016001600160401b0381118282101715610138576101386100c2565b6040528060a085018681111561014d57600080fd5b855b8181101561016e57610160816100d8565b83526020928301920161014f565b50519196919550909350505050565b60805161095b6101a56000396000818160dc0152818161016e01526101dd015261095b6000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631311163c146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063467ad0e9146100fe578063e90dd9e214610111575b600080fd5b6100856100803660046107ee565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060025481565b6100bf6100ba366004610830565b6101aa565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c366004610830565b6101ca565b61009060005481565b600254813515801561012a575080155b1561013757426002555050565b610140826103fe565b156101a657806101685760808201351561015957426002555b50803560015560800135600055565b426101937f00000000000000000000000000000000000000000000000000000000000000008361085f565b106101a657813560015560808201356000555b5050565b600381600581106101ba57600080fd5b01546001600160a01b0316905081565b60025480158015906102045750426102027f00000000000000000000000000000000000000000000000000000000000000008361085f565b105b61024a5760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000548215801561025e5750806002166002145b8015610276575060038001546001600160a01b031633145b1561028757600219166004176103f7565b82600114801561029a5750806008166008145b80156102b357506003600401546001600160a01b031633145b156102c157600819166103f7565b8260021480156102d45750806004166004145b80156102ed57506003600401546001600160a01b031633145b156102fe57600419166010176103f7565b8260031480156103115750806001166001145b801561032a57506003600001546001600160a01b031633145b1561033b57600119166002176103f7565b82600414801561034e5750806020166020145b801561036757506003600101546001600160a01b031633145b1561037857602019166040176103f7565b82600514801561038b5750806040166040145b80156103a457506003600401546001600160a01b031633145b156103b557604019166008176103f7565b8260061480156103c85750806010166010145b80156103e157506003600201546001600160a01b031633145b156103f257601019166020176103f7565b505050565b6000555050565b600081600001356001541061041557506000919050565b604080518335602082810191909152840135818301529083013560608281019190915283013560808281019190915283013560a08281019190915283013560c082015260009060e00160405160208183030381529060405280519060200120905060005b6005811015610541576003816005811061049557610495610877565b01546001600160a01b03166105176104b060c087018761088d565b83600581106104c1576104c1610877565b6020028101906104d191906108ad565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610511925087915061054b9050565b9061057e565b6001600160a01b03161461052f575060009392505050565b80610539816108f4565b915050610479565b5060019392505050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b600080600061058d85856105a2565b9150915061059a816105e8565b509392505050565b6000808251604114156105d95760208301516040840151606085015160001a6105cd87828585610734565b945094505050506105e1565b506000905060025b9250929050565b60008160048111156105fc576105fc61090f565b14156106055750565b60018160048111156106195761061961090f565b14156106625760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610241565b60028160048111156106765761067661090f565b14156106c45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610241565b60038160048111156106d8576106d861090f565b14156107315760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610241565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561076157506000905060036107e5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156107b5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107de576000600192509250506107e5565b9150600090505b94509492505050565b60006020828403121561080057600080fd5b813567ffffffffffffffff81111561081757600080fd5b820160e0818503121561082957600080fd5b9392505050565b60006020828403121561084257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561087257610872610849565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126108a357600080fd5b9190910192915050565b6000808335601e198436030181126108c457600080fd5b83018035915067ffffffffffffffff8211156108df57600080fd5b6020019150368190038213156105e157600080fd5b600060001982141561090857610908610849565b5060010190565b634e487b7160e01b600052602160045260246000fdfea264697066735822122018806c5258e81c958154abdfc583fbebc04b7a4c181a90d2e47e90a756a232c864736f6c63430008090033";

type PH_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PH_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PH_ProcessChannel__factory extends ContractFactory {
  constructor(...args: PH_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PH_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<PH_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): PH_ProcessChannel {
    return super.attach(address) as PH_ProcessChannel;
  }
  override connect(signer: Signer): PH_ProcessChannel__factory {
    return super.connect(signer) as PH_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PH_ProcessChannelInterface {
    return new utils.Interface(_abi) as PH_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PH_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as PH_ProcessChannel;
  }
}
