/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RentalAgreement,
  RentalAgreementInterface,
} from "../../../contracts/rental_agreement.sol/RentalAgreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[4]",
        name: "_participants",
        type: "address[4]",
      },
      {
        internalType: "address[1]",
        name: "_tokenAddresses",
        type: "address[1]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "enact",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016000553480156200001657600080fd5b50604051620015db380380620015db83398181016040528101906200003c91906200040c565b8160019060046200004f929190620000d0565b508060006001811062000067576200006662000453565b5b602002015160056040516200007c90620004dd565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620004f4565b82600481019282156200013f579160200282015b828111156200013e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620000e4565b5b5090506200014e919062000152565b5090565b5b808211156200016d57600081600090555060010162000153565b5090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d08262000185565b810181811067ffffffffffffffff82111715620001f257620001f162000196565b5b80604052505050565b60006200020762000171565b9050620002158282620001c5565b919050565b600067ffffffffffffffff82111562000238576200023762000196565b5b602082029050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002758262000248565b9050919050565b620002878162000268565b81146200029357600080fd5b50565b600081519050620002a7816200027c565b92915050565b6000620002c4620002be846200021a565b620001fb565b90508060208402830185811115620002e157620002e062000243565b5b835b818110156200030e5780620002f9888262000296565b845260208401935050602081019050620002e3565b5050509392505050565b600082601f83011262000330576200032f62000180565b5b60046200033f848285620002ad565b91505092915050565b600067ffffffffffffffff82111562000366576200036562000196565b5b602082029050919050565b600062000388620003828462000348565b620001fb565b90508060208402830185811115620003a557620003a462000243565b5b835b81811015620003d25780620003bd888262000296565b845260208401935050602081019050620003a7565b5050509392505050565b600082601f830112620003f457620003f362000180565b5b60016200040384828562000371565b91505092915050565b60008060a083850312156200042657620004256200017b565b5b6000620004368582860162000318565b92505060806200044985828601620003dc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b7f7573646300000000000000000000000000000000000000000000000000000000600082015250565b6000620004c560048362000482565b9150620004d2826200048d565b600482019050919050565b6000620004ea82620004b6565b9150819050919050565b6110d780620005046000396000f3fe60806040526004361061003f5760003560e01c806304c2320b1461004457806335c1d349146100815780635e9cc2a9146100be578063e90dd9e2146100da575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610b6b565b610105565b6040516100789190610bf5565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610c46565b61014e565b6040516100b59190610bf5565b60405180910390f35b6100d860048036038101906100d39190610c46565b610184565b005b3480156100e657600080fd5b506100ef610a0b565b6040516100fc9190610c82565b60405180910390f35b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001816004811061015e57600080fd5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000805490505b60008114610a0057600180821614156102b75781600114801561020f575060016002600481106101be576101bd610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561022a57600119811690506002811790506000915061018b565b81600514801561029b5750600160026004811061024a57610249610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156102b657600119811690506020811790506000915061018b565b5b600480821614156103db57816002148015610333575060016000600481106102e2576102e1610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561034e57600419811690506008811790506000915061018b565b8160031480156103bf5750600160006004811061036e5761036d610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156103da57600419811690506010811790506000915061018b565b5b601080821614156106585781600414801561045657506001806004811061040557610404610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561065757601019811690506000811790506000600560405161047890610d23565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ec57600080fd5b505afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190610d71565b9050600560405161053490610d23565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160026004811061059457610593610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620f424085600a6105c79190610f00565b632faf08006105d69190610f4b565b6105e09190610fd4565b6040518463ffffffff1660e01b81526004016105fe93929190611005565b602060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106509190611074565b5050610a00565b5b602080821614156108d5578160061480156106d357506001806004811061068257610681610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156108d45760201981169050600081179050600060056040516106f590610d23565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561076957600080fd5b505afa15801561077d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a19190610d71565b905060056040516107b190610d23565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160006004811061081157610810610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620f424085600a6108449190610f00565b632faf08006108539190610f4b565b61085d9190610fd4565b6040518463ffffffff1660e01b815260040161087b93929190611005565b602060405180830381600087803b15801561089557600080fd5b505af11580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190611074565b5050610a00565b5b6002808216141561096c578160071480156109505750600180600481106108ff576108fe610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561096b57600219811690506004811790506000915061018b565b5b600880821614156109ff578160081480156109e757506001806004811061099657610995610c9d565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b156109fe5760081981169050600081179050610a00565b5b5b806000819055505050565b60005481565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a7882610a2f565b810181811067ffffffffffffffff82111715610a9757610a96610a40565b5b80604052505050565b6000610aaa610a11565b9050610ab68282610a6f565b919050565b600067ffffffffffffffff821115610ad657610ad5610a40565b5b610adf82610a2f565b9050602081019050919050565b82818337600083830152505050565b6000610b0e610b0984610abb565b610aa0565b905082815260208101848484011115610b2a57610b29610a2a565b5b610b35848285610aec565b509392505050565b600082601f830112610b5257610b51610a25565b5b8135610b62848260208601610afb565b91505092915050565b600060208284031215610b8157610b80610a1b565b5b600082013567ffffffffffffffff811115610b9f57610b9e610a20565b5b610bab84828501610b3d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bdf82610bb4565b9050919050565b610bef81610bd4565b82525050565b6000602082019050610c0a6000830184610be6565b92915050565b6000819050919050565b610c2381610c10565b8114610c2e57600080fd5b50565b600081359050610c4081610c1a565b92915050565b600060208284031215610c5c57610c5b610a1b565b5b6000610c6a84828501610c31565b91505092915050565b610c7c81610c10565b82525050565b6000602082019050610c976000830184610c73565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b7f7573646300000000000000000000000000000000000000000000000000000000600082015250565b6000610d0d600483610ccc565b9150610d1882610cd7565b600482019050919050565b6000610d2e82610d00565b9150819050919050565b600060ff82169050919050565b610d4e81610d38565b8114610d5957600080fd5b50565b600081519050610d6b81610d45565b92915050565b600060208284031215610d8757610d86610a1b565b5b6000610d9584828501610d5c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610e2457808604811115610e0057610dff610d9e565b5b6001851615610e0f5780820291505b8081029050610e1d85610dcd565b9450610de4565b94509492505050565b600082610e3d5760019050610ef9565b81610e4b5760009050610ef9565b8160018114610e615760028114610e6b57610e9a565b6001915050610ef9565b60ff841115610e7d57610e7c610d9e565b5b8360020a915084821115610e9457610e93610d9e565b5b50610ef9565b5060208310610133831016604e8410600b8410161715610ecf5782820a905083811115610eca57610ec9610d9e565b5b610ef9565b610edc8484846001610dda565b92509050818404811115610ef357610ef2610d9e565b5b81810290505b9392505050565b6000610f0b82610c10565b9150610f1683610d38565b9250610f437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610e2d565b905092915050565b6000610f5682610c10565b9150610f6183610c10565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9a57610f99610d9e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdf82610c10565b9150610fea83610c10565b925082610ffa57610ff9610fa5565b5b828204905092915050565b600060608201905061101a6000830186610be6565b6110276020830185610be6565b6110346040830184610c73565b949350505050565b60008115159050919050565b6110518161103c565b811461105c57600080fd5b50565b60008151905061106e81611048565b92915050565b60006020828403121561108a57611089610a1b565b5b60006110988482850161105f565b9150509291505056fea26469706673582212201f24d10bef43cce4f3dda929d17fe8a15179104ac46d43a04641713e5c4e86db64736f6c63430008090033";

type RentalAgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalAgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalAgreement__factory extends ContractFactory {
  constructor(...args: RentalAgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _participants: [AddressLike, AddressLike, AddressLike, AddressLike],
    _tokenAddresses: [AddressLike],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _participants,
      _tokenAddresses,
      overrides || {}
    );
  }
  override deploy(
    _participants: [AddressLike, AddressLike, AddressLike, AddressLike],
    _tokenAddresses: [AddressLike],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _participants,
      _tokenAddresses,
      overrides || {}
    ) as Promise<
      RentalAgreement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RentalAgreement__factory {
    return super.connect(runner) as RentalAgreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalAgreementInterface {
    return new Interface(_abi) as RentalAgreementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RentalAgreement {
    return new Contract(address, _abi, runner) as unknown as RentalAgreement;
  }
}
